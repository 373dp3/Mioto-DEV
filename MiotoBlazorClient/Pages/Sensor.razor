@page "/sensor/{idStr}/"
@inject HttpClient Http
@inject NavigationManager NavMgr
@implements IDisposable
@inherits MiotoSockPage

@if (listPanelModel.Count > 0)
{
    <div class="container-fluid">
        <div class="row">
            @foreach (var itemBase in listPanelModel)
            {
                var item = (PanelModelSmallStop)itemBase;
                <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                    <div class="card">
                        @if (item.status == PanelModel.RunOrStop.RUN)
                        {
                            <div class="card-header bg-primary">
                                <div class="text-truncate text-white">@(item.title)</div>
                            </div>
                        }
                        else if (item.status == PanelModel.RunOrStop.STOP)
                        {
                            <div class="card-header bg-danger">
                                <div class="text-truncate text-white">@(item.title)</div>
                            </div>
                        }
                        else
                        {
                            <div class="card-header">
                                <small>@(item.title)</small>
                            </div>
                        }
                        <table class="table mb-0">
                            <tr>
                                <td><small>出来高</small></td>
                                <td class="text-right"><span>@(item.dekidaka)</span></td>
                            </tr>
                            <tr>
                                <td><small>MT率</small></td>
                                <td class="text-right"><span>@(item.getBekidouStr())</span></td>
                            </tr>
                            <tr>
                                <td><small>停止</small></td>
                                <td class="text-right"><span>@(item.getStopSecStr())</span></td>
                            </tr>
                            <tr>
                                <td><small>稼働</small></td>
                                <td class="text-right"><span>@(item.getRunSecStr())</span></td>
                            </tr>
                            @foreach(var cycle in item.listSmallStop)
                            {
                                <tr>
                                    <td colspan="2">@(cycle.dt.ToShortTimeString()) / @((cycle.ct01/60.0).ToString("F1"))分</td>
                                </tr>
                            }
                        </table>
                        <button type="button" class="btn btn-primary" 
                                @onclick="async ()=> { await SetProductionFactor(item, ProductionFactor.Status.START_PRODUCTION); }">生産開始</button>
                    </div>
                </div>

            }
        </div>
        <div class="mt-3"><a class="btn btn-secondary" href="">一覧へ戻る</a></div>
    </div><!-- container-fluid -->
}
<p>@debugMsg</p>
<p>@tmp</p>

@code{
    [Parameter]
    public string idStr { get; set; } = null;

    /// <summary>
    /// 全ての処理の起点
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await init(NavMgr, Http, idStr, Mode.SINGLE, PanelModelSmallStop.Create);
    }

    public async Task SetProductionFactor(PanelModel item, ProductionFactor.Status status)
    {
        await this.Send(new ProductionFactor() { status = status, mac=item.mac, ct=20.0 });
    }
}